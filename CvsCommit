# Overhaul the running.omh documentation (and add -noframe)
#
# CvsCommit: file that made this commit.
# RunOMhelp: use the -noframe comamnd line argument when running OMhelp.
# RunOMhelp.bat: use the -noframe comamnd line argument when running OMhelp.
# whatsnew.omh: user's view of the changes.
# running.omh: overhaul of documentation for running OMhelp.
# FrameSet.c: Fix a spelling error.
# HtmlHead.c: Fix a spelling error.
# omhelp.y: do not check xref frame when suppressed in -noframe case.
# Makefile.am: add AutoTag.h to distribution, fix bison output.
# fixbision.sed: fix an error in bison's output.
#
# Other files: automatic editing of cross references to running.omh
add_list="
	src/fixbison.sed
"
change_list="
	CvsCommit
	RunOMhelp
	RunOMhelp.bat
	omh/whatsnew.omh
	omh/running.omh
	src/FrameSet.c
	src/HtmlHead.c
	src/Makefile.am

	omh/color.omh
	omh/file.omh
	omh/glossary.omh
	omh/href.omh
	omh/latex.omh
	omh/path.omh
	omh/spell.omh
	omh/whatsnew01.omh
	omh/whatsnew02.omh
	omh/whatsnew03.omh
	omh/whatsnew04.omh
	omh/why.omh
	omh/getstarted/StartLatex.omh
	omh/getstarted/StartMultiple.omh
	omh/getstarted/StartSimple.omh
	omh/latex/LatexMacro.omh
"
delete_list="
"
#----------------------------------------------------------------------
# Edit section above for individual cases, section below stays the same
#----------------------------------------------------------------------
sed -e '/^[^#]/d' -e 's/^[#] *//' < CvsCommit > CvsCommit.log
count=0
for file in $add_list $change_list
do
	count=`expr $count + 1`
	ext=`echo $file | sed -e "s/.*\././"`
	if [ $file != "CvsCommit"      ] && \
	   [ $file != "CvsCommit.sed"  ] && \
	   [ $ext != ".vcproj"         ] && \
	   [ $ext != ".vim"            ]
	then
		# automatic edits and backups
		echo "cp $file junk.$count"
		cp $file junk.$count
		sed -f CvsCommit.sed < junk.$count > $file
		diff junk.$count $file
	fi
done
for file in $add_list
do
	echo "svn add $file ?"
done
for file in $delete_list
do
	echo "svn delete $file ?"
done
response=""
while [ "$response" != "c" ] && [ "$response" != "a" ]
do
	read -p "continue [c] or abort [a] ? " response
done
if [ "$response" = "c" ]
then
	for file in $add_list
	do
		cvs add $file
	done
	for file in $delete_list
	do
		cvs delete $file
	done
	cvs commit -F CvsCommit.log $add_list $change_list $delete_list
else
	count=0
	for file in $add_list $change_list
	do
		count=`expr $count + 1`
		ext=`echo $file | sed -e "s/.*\././"`
		if [ $file != "CvsCommit"      ] && \
	   	[ $file != "CvsCommit.sed"  ] && \
	   	[ $ext != ".vcproj"         ] && \
	   	[ $ext != ".vim"            ]
		then
			# undo the automatic edits
			echo "mv junk.$count $file"
			mv junk.$count $file
		fi
	done
fi
