# Add codei command (better version of syntax)
#
# codei.omh:  documentation for new command.
# color_switch.c: routine to swith colors at each delimiter.
# color_switch.h: include file for color_switch.c.
# output_text.c: version of outtext split out from omhelp.y.
# output_text.h: include file for output_text.c.
#
# CvnCommit: this file.
# Build: update VIMRUNTIME directory.
# omhelp.vim: add the codei and icode keywords.
# children_cmd.omh: include the codei.omh section.
# codep.omh: change cross reference for pre-formatted font.
# glossary: improve definition of pre-formatter font.
# math.omh: reference pre-formatted font.
# nobreak.omh: reference pre-formatted font.
# pre.omh: reference pre-formatted font.
# whatsnew.omh: user's view of the changes.
# whats_new03.omh: reference pre-formatted font.
# Makefile.am: add color_swith and output_text source files. 
# SplitText.c: fix developer documentation.
# lexomh.c: add codei and icode tokens.
# omhelp.y: move outtext to separate file and include new commands.
# src.vcproj: add color_swith and output_text source files. 
add_list="
	omh/codei.omh
	src/color_switch.c
	src/color_switch.h
	src/output_text.c
	src/output_text.h
"
change_list="
	CvsCommit
	Build
	OMhelp/omhelp.vim
	omh/children_cmd.omh
	omh/codep.omh
	omh/glossary.omh
	omh/math.omh
	omh/nobreak.omh
	omh/pre.omh
	omh/whatsnew.omh
	omh/whatsnew03.omh
	src/Makefile.am
	src/SplitText.c
	src/lexomh.c
	src/omhelp.y
	src/src.vcproj
"
delete_list="
"
#----------------------------------------------------------------------
# Edit section above for individual cases, section below stays the same
#----------------------------------------------------------------------
sed -e '/^[^#]/d' -e 's/^[#] *//' < CvsCommit > CvsCommit.log
count=0
for file in $add_list $change_list
do
	count=`expr $count + 1`
	ext=`echo $file | sed -e "s/.*\././"`
	if [ $file != "CvsCommit"      ] && \
	   [ $file != "CvsCommit.sed"  ] && \
	   [ $ext != ".vcproj"         ] && \
	   [ $ext != ".gif"            ] && \
	   [ $ext != ".png"            ] && \
	   [ $ext != ".vim"            ]
	then
		# automatic edits and backups
		echo "cp $file junk.$count"
		cp $file junk.$count
		sed -f CvsCommit.sed < junk.$count > $file
		diff junk.$count $file
	fi
done
for file in $add_list
do
	echo "cvs add $file ?"
done
for file in $delete_list
do
	echo "cvs delete $file ?"
done
response=""
while [ "$response" != "c" ] && [ "$response" != "a" ]
do
	read -p "continue [c] or abort [a] ? " response
done
if [ "$response" = "c" ]
then
	for file in $delete_list
	do
		cvs delete $file
	done
	for file in $add_list
	do
		cvs add $file
	done
	cvs commit -F CvsCommit.log $add_list $change_list $delete_list
else
	count=0
	for file in $add_list $change_list
	do
		count=`expr $count + 1`
		ext=`echo $file | sed -e "s/.*\././"`
		if [ $file != "CvsCommit"      ] && \
	   	[ $file != "CvsCommit.sed"  ] && \
	   	[ $ext != ".vcproj"         ] && \
	   	[ $ext != ".vim"            ]
		then
			# undo the automatic edits
			echo "mv junk.$count $file"
			mv junk.$count $file
		fi
	done
fi
