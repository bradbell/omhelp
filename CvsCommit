# Specify beginning of error and warning message on stdout. 
#
# Build: change Developer to Dev.
# CleanOMhelp: change Developer to Dev.
# CvsCommit: file that did this commit.
# Makefile.am: make OMhelp.Doc.log depend on OMhelp.Dev.log.
# RunOMhelp: change Developer to Doc and improve error, warning reporting.
# RunOMhelp.bat: change Developer to Doc and improve error, warning reporting.
# running.omh: improve indexing.
# stdout.omh: redo entire documentaiton for OMhelp standard output.
# whatsnew.omh: user's view of the changes.
# allocmem.c: include trace_exit.h.
# cross.c: begin warning with "OMhelp Warning:".
# fatalerr.c: begin warning, error with "OMhelp Warning:", "OMhelp Error".
# omhelp.y: begin warning with "OMhelp Warning:".
# trace_exit.c: fix OMhelp spelling error.
# misc.omh: add trace_exit.c.
add_list="
"
change_list="
	Build
	CleanOMhelp
	CvsCommit
	Makefile.am
	RunOMhelp
	RunOMhelp.bat
	omh/running.omh
	omh/stdout.omh
	omh/whatsnew.omh
	src/allocmem.c
	src/cross.c
	src/fatalerr.c
	src/omhelp.y
	src/trace_exit.c
	src/omh/misc.omh
"
delete_list="
"
#----------------------------------------------------------------------
# Edit section above for individual cases, section below stays the same
#----------------------------------------------------------------------
sed -e '/^[^#]/d' -e 's/^[#] *//' < CvsCommit > CvsCommit.log
count=0
for file in $add_list $change_list
do
	count=`expr $count + 1`
	ext=`echo $file | sed -e "s/.*\././"`
	if [ $file != "CvsCommit"      ] && \
	   [ $file != "CvsCommit.sed"  ] && \
	   [ $ext != ".vcproj"         ] && \
	   [ $ext != ".vim"            ]
	then
		# automatic edits and backups
		echo "cp $file junk.$count"
		cp $file junk.$count
		sed -f CvsCommit.sed < junk.$count > $file
		diff junk.$count $file
	fi
done
for file in $add_list
do
	echo "svn add $file ?"
done
for file in $delete_list
do
	echo "svn delete $file ?"
done
response=""
while [ "$response" != "c" ] && [ "$response" != "a" ]
do
	read -p "continue [c] or abort [a] ? " response
done
if [ "$response" = "c" ]
then
	for file in $add_list
	do
		cvs add $file
	done
	for file in $delete_list
	do
		cvs delete $file
	done
	cvs commit -F CvsCommit.log $add_list $change_list $delete_list
else
	count=0
	for file in $add_list $change_list
	do
		count=`expr $count + 1`
		ext=`echo $file | sed -e "s/.*\././"`
		if [ $file != "CvsCommit"      ] && \
	   	[ $file != "CvsCommit.sed"  ] && \
	   	[ $ext != ".vcproj"         ] && \
	   	[ $ext != ".vim"            ]
		then
			# undo the automatic edits
			echo "mv junk.$count $file"
			mv junk.$count $file
		fi
	done
fi
