-------------------------------------------------------------------------------
OMhelp: Language Independent Embedded Documentation
          Copyright (C) 1998-2019 Bradley M. Bell
OMhelp is distributed under the terms of the
            GNU General Public License Version 2.
-------------------------------------------------------------------------------
#
$begin InstallUnix$$
$dollar @$$
$spell
	grep
	https://github.com/bradbell
	xam
	dev
	cmake
	src
	Cygwin
	Gw
	exe
	omh
	getstarted
	noframe
	xml
	dir
	subtree
	htm
	rm
	wrd
	ftdetect
	filetype
	vimrc
	OMhelp
	xzf
	omhelp
	gz
	mkdir
	datadir
	usr
	regex
	libsource
	txt
$$


$section Unix Installation and Testing$$

$head Requirements$$
Building OMhelp requires that a C, C++ compiler,
$href%https://git-scm.com/%git%$$,
and
$href%http://www.cmake.org%cmake%$$ version 2.8 or greater
are in your execution path.
These are some other optional requirements listed below:

$subhead source-highlight$$
Using the $cref srcfile$$ command is optional.
If you are using this command, you will need the
$href%http://www.gnu.org/software/src-highlite/%source-highlight%$$
library which in turn requires the
$href%http://www.boost.org/doc/libs/1_60_0/libs/regex/doc/html/index.html
	%boost_regex
%$$
library.

$children%../bin/highlight.sh%$$
$subhead Octave$$
The current version of $code source-highlight$$ does not support
Octave source code ($icode%*%.m%$$).
Adding Octave to the list supported by source-highlight is optional.
The script $cref highlight.sh$$ can be used for this purpose.

$subhead flex, bison$$
Changing the $code src/omhelp.y$$, $code latex.y$$, or
$code latex.l$$ file is optional.
If you are doing this, you will need
$href%http://flex.sourceforge.net/%flex%$$ and
$href%http://bison.sourceforge.net/%bison%$$ in your execution path.

$head Download OMhelp$$
Use the following commands to get the current version of OMhelp
$codei%
	git clone https://github.com/bradbell/omhelp.git omhelp.git
	cd omhelp.git
%$$
Use the following commands to determine the corresponding
$icode git_hash$$ and version:
$codei%
	git show-ref | grep 'refs/heads/master'
	grep '^SET(omhelp_version' CMakeLists.txt
%$$
Use the following commands to checkout as specific $icode git_hash$$
and check the corresponding version
$codei%
	git checkout %git_hash%
	grep '^SET(omhelp_version' CMakeLists.txt
%$$.

$head Distribution Directory$$
For this download procedure, we refer to $code omhelp.git$$ as the
$icode distribution_directory$$.

$head CMake Command$$
Execute the following commands:
$codei%
	cd %distribution_directory%
	mkdir build
	cd build
	cmake \
		-D source_highlight_prefix=%source_highlight_prefix%  \
		-D have_flex_and_bison=%have_flex_and_bison% \
		-D omhelp_prefix=%omhelp_prefix%  \
		-D omhelp_datadir=%omhelp_datadir%  \
		-D omhelp_c_flags=%omhelp_c_flags%  \
		-D omhelp_build_type=%omhelp_build_type% \
		..
%$$
Only the program name $code cmake$$,
and the distribution directory reference $code ..$$,
are required.
The other entries use default values if they are not specified.

$subhead source_highlight_prefix$$
The default value for $icode source_highlight_prefix$$ is $code /usr$$.
This prefix installs the $code source-highlight$$ library in
one of the following:
$codei%
	/usr/lib/libsource-highlight.*
	/usr/lib64/libsource-highlight.*
%$$

$subhead have_flex_and_bison$$
If you have these
$cref/flex, bison/InstallUnix/Requirements/flex, bison/$$,
you should specify this value as $code YES$$.
Otherwise, you should use $code NO$$ (the default).

$subhead omhelp_prefix$$
The default value for $icode omhelp_prefix$$ is $code /usr$$; i.e.,
by default the OMhelp executable is installed in
$codep
	/usr/bin/omhelp
$$
If you do not have write permission for $code /usr$$,
you must specify a $icode prefix$$.
If $icode%omhelp_prefix%/bin%$$ is not in your path,
you will have to specify the entire path
$icode%omhelp_prefix%/bin/omhelp%$$ when
you execute it.

$subhead omhelp_datadir$$
The data files used by OMhelp are installed in
$codei%
	%omhelp_prefix%/%omhelp_datadir%/omhelp_data
%$$
The default value for $icode omhelp_datadir$$ is $code share$$.

$subhead omhelp_c_flags$$
These are extra flags, besides the debug and release flags,
that are used during compilation.
The default value for $icode omhelp_c_flags$$ is none.

$subhead omhelp_build_type$$
This should be either $code debug$$ (compile for debugging)
or $code release$$ (compile for speed).
The default, if it is not specified, is $code debug$$.

$head Build Executable$$
In the $icode%distribution_directory%/build%$$ execute the following command
$codep
	make
$$
This should build the program
$codei%
	%distribution_directory%/build/src/omhelp
%$$
If you are using Cygwin or MinGw,
the file $code omhelp$$ may possibly be $code omhelp.exe$$.
If you have fortran,
and CMake can figure out how to link C to Fortran,
the following program will also be built
$codei%
	%distribution_directory%/build/omh/getstarted/run_all
%$$

$head OMhelp Documentation$$
It is no longer necessary to build the
OMhelp developer and user documentation before installing OMhelp;
i.e., you can skip these steps.

$subhead Developer Documentation$$
Starting in the $icode%distribution_directory%%$$ directory,
the following commands create the developer documentation in the
$icode%distribution_directory%/dev%$$:
$codep
	mkdir dev
	cd dev
	../build/src/omhelp ../src/omh/omhelp.omh > ../omhelp.dev.log \
		-noframe -xml -debug -omhelp_dir ../omhelp_data
	cd ..
$$
This should complete without error, and so also functions as a test
of the distribution.

$subhead User Documentation$$
Starting in the $icode%distribution_directory%%$$ directory,
the following commands create the user documentation in the
$icode%distribution_directory%/doc%$$:
$codep
	mkdir doc
	cd doc
	../build/src/omhelp ../omh/overview.omh -noframe -xml -debug \
		-omhelp_dir ../omhelp_data
$$
This should complete without error, and so also functions as a test
of the distribution.

$head Install OMhelp$$
In the $icode%distribution_directory%/build%$$ execute the following command
$codep
	make install
$$

$head Getting Started$$
See $cref get_started$$

$head Spelling List$$
The OMhelp utility files are stored in the
$icode%distribution_directory%/omhelp_data%$$ directory.
The spelling lists below are a subset of these files.

$subhead english.wrd$$
The file $icode%distribution_directory%/omhelp_data/english.wrd%$$ is a
list of standard english words.
The words must be in alphabetic order, lower case, and contain only letters.
For example,
$codep
	a
	aardvark
	aardvarks
	...
$$
A default $code english.wrd$$ file is distributed with OMhelp.

$subhead local.wrd$$
The file $icode%distribution_directory%/omhelp_data/local.wrd%$$ is an optional
list of special words, not in $code english.wrd$$ that are to be
considered correctly spelled.
These words
must also be in alphabetic order, lower case, and contain only letters.

$subhead dictionary.bin$$
OMhelp combines the files $code english.wrd$$ and $code local.wrd$$
to form
$codei%
	%distribution_directory%/omhelp_data/dictionary.bin
%$$
If you make any changes to $code english.wrd$$ or $code local.wrd$$,
the file $code dictionary.bin$$ should be deleted.
A new $code dictionary.bin$$ that combines the words $code english.wrd$$
and $code local.wrd$$ can be created and installed by executing following
commands in the $icode%distribution_directory%%$$ directory:
$codep
	rm omhelp_data/dictionary.bin
	cd build/omh/getstarted
	../../src/omhelp \
		../../../omh/getstarted/simple_example.omh \
		-omhelp_dir ../../../omhelp_data
	cd ../..
	make install
$$

$head Vim Editor$$
$index syntax, highlight$$
$index highlight, syntax$$
The following
$href%
	http://www.vim.org/%
	vim editor
%$$
syntax highlighting files are installed in:
$codei%
	%omhelp_prefix%/%omhelp_datadir%/omhelp_data/vim/syntax/omhelp.vim
	%omhelp_prefix%/%omhelp_datadir%/omhelp_data/vim/ftdetect/omhelp.vim
%$$
If you copy the respective files to
$codei%
	@HOME/.vim/syntax/omhelp.vim
	@HOME/.vim/ftdetect/omhelp.vim
%$$
you will be able to use OMhelp syntax highlighting.
The $code vim$$ commands
$codep
	:syntax on
	:set syntax=omhelp
$$
will turn on OMhelp syntax highlighting for the file you are currently
editing.
You could convert back to the original highlighting by executing the command
$codep
	:echo &filetype
	:set syntax=%filetype%
$$
where $icode filetype$$ is the value echoed by the $code :echo &filetype$$
command.
You may also want to automatically turn on vim syntax highlighting.
You can do this by placing the following text in the
file $code .vimrc$$ in your home directory:
$codep
	:syntax on
$$

$end
