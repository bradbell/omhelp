# ---------------------------------------------------------------------------
# OMhelp: Source Code -> Help Files: Copyright (C) 1998-2006 Bradley M. Bell
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# ---------------------------------------------------------------------------
#
$begin codei$$
$spell 
	codei
	icode
	const
	cmd
$$
$dollar @$$


$index codei$$
$index icode$$
$index syntax$$
$index prototype$$
$index command, display$$
$index display, command$$
$index pre-formatted$$

$section Switch Between Code and Italic Pre-formatted Font$$

$head Syntax$$
$codei/@/cmd/%/text1/%/text2/%/.../%/textN/%@@/$$


$head See Also$$
$cref/syntax/$$, $cref/font/$$, $cref/color/$$

$head Purpose$$
Display text that alternates between 
a pre-formatted code font and 
a pre-formatted italic font.
The code font is the same as for the $cref/@code/font/$$ command.
Because it is pre-formatted,
the italic font is different from the 
$cref/@italic/font/$$ command.

$head escape$$
Any occurrences of the $cref/escape/$$ character appears in the text,
are not put in the output.
This is helpful when aligning rows that have a different number
of delimiters in them.


$head cmd$$
The value of $icode cmd$$ specifies which font starts first.

$align bottom$$

$codei%
@%cmd
%$$
This command is one of the following:
$table
$code @codei$$ $pre  $$
	$cnext start with code, then italic, then code ...  $rnext
$code @icode$$ $pre  $$
	$cnext start with italic, then code, then italic ... 
$tend

$head text$$
The text
$codei/%/text1/%/text2/%/.../%/textN/%/$$
is a $xref/glossary/Delimiter Sequence/delimiter sequence/$$
and $code %$$ can be any character that is not a letter.
The characters in $icode text1$$, ..., $icode textN$$
are using in a 
$cref/pre-formatted font/glossary/Pre-formatted Font/$$.
The characters in $icode text1$$ are in the first color,
the characters in $icode text2$$ are in the second color,
and so on.

$head Example$$
The syntax above was created using the $codei @codei$$ command.
The input
$codep
	@codei%extern void f(int %i% , const char *%s%);%@@
$$
produces the following output:
$codei%
	extern void f(int %i% , const char *%s%);
%$$
The input
$codep
	@codei|
	extern void f(
		int         |i| ,
		const char *|s| 
	);|@@
$$
produces the following output
$codei|
	extern void f(
		int         |i| ,
		const char *|s|
	);
|$$

$subhead Escape$$
The $cref escape$$ character is useful because
the delimiter character does not appear in the output
(the default value for this character is $code \$$).
For example, the input
$codep
	@codei%
	%x%   = 1 + %a% + %b%
	%y%   = 2 + \ \   %b%
	%@@
$$
produces the following output
$codei%
	%x%   = 1 + %a% + %b%
	%y%   = 2 + \ \   %b%
%$$

$head Remark$$
The $code @codei$$ and $code @icode$$ commands
provide similar functionality to the $cref/syntax/$$ command.
The differences are

$list number$$
You can begin with either the code or italic font.
$lnext
Both fonts are pre-formatted.
$lend

The advantage of beginning with either color is that it makes for
shorter commands. For example, the input
$codep
	@icode i@@
$$
can be used to reference $icode i$$ in the prototypes above
(remember that when the delimiter is a space, there is only one entry in
the delimiter sequence and the other spaces are not delimiters). 

$end
