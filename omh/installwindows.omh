# ---------------------------------------------------------------------------
# OMhelp: Source Code -> Help Files: Copyright (C) 1998-2006 Bradley M. Bell
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# ---------------------------------------------------------------------------
#
$begin InstallWindows$$
$dollar @$$
$spell 
	xam
	OMhelp
	Cygwin
	Gw
	cmake
	omhelp
	vcvarsall
	mkdir
	Makefiles
	datadir
	usr
	nmake
	src
	exe
	omh
	getstarted
	dev
	noframe
	xml
	dir
	subtree
	htm
	del
	wrd
	Microsoft
$$

$index free, install OMhelp$$
$index install, windows OMhelp$$
$index windows, OMhelp install$$
$index OMhelp, install windows$$

$section Windows Installation and Testing$$

$head Using Cygwin and MinGw$$
If you are using 
$href%http://www.cygwin.com%cygwin%$$
or,
$href%http://www.mingw.org%mingw%$$,
just follow all of the $cref/unix install/InstallUnix/$$ steps.
If you are using Dos formatted files, download the DOS version
(see next step) and then follow the Unix installation steps.

$head Requirements$$
$index requirements$$
The following programs are required to install OMhelp under windows:

$subhead 7z$$
$href%http://www.7-zip.org/%7-zip%$$,
a program for unpacking zip files
(a different archiving program could be used).

$subhead cmake$$
$href%http://www.cmake.org/%cmake%$$,
a program that installs other programs.

$subhead GnuWin$$
The following files should all be installed with a prefix
that does not include spaces:

$list number$$
$href%http://gnuwin32.sourceforge.net/packages/bison.htm%bison%$$,
a parser generator.
$lnext
$href%http://gnuwin32.sourceforge.net/packages/flex.htm%flex%$$,
a lexical analyzer.
$lend

$subhead Visual Studio$$
$href%http://www.visualstudio.com/downloads/download-visual-studio-vs
	%Visual Studio Express
%$$,
which contains a C compiler
(other C compilers could be used).

$head Environment Variables$$
We assume that the following variables below have been defined.

$subhead zip_prefix$$
The value of $code%zip_prefix%$$ is the prefix for the install of
$code 7z$$; e.g., the following file must exist:
$codep
	%zip_prefix%\bin\7z
$$
For example
$codep
	SET zip_prefix=C:\Program Files\7-Zip
$$

$subhead cmake_prefix$$
The value of $code%cmake_prefix%$$ is the prefix for the install of
$code cmake$$; e.g., the following file must exist:
$codep
	%cmake_prefix%\bin\cmake
$$
For example
$codep
	SET cmake_prefix=C:\Program Files (x86)\CMake
$$

$subhead gnu_prefix$$
The value of $code%gnu_prefix%$$ is the prefix for the install of
$code flex$$ and $code bison$$; e.g., the following file must exist:
$codep
	%gnu_prefix%\bin\flex
	%gnu_prefix%\bin\bison
$$
For example
$codep
	SET gnu_prefix=C:\GnuWin32
$$

$subhead studio_prefix$$
The value of $code%studio_prefix%$$ is the prefix for the install of
Visual Studio install; e.g., the following file must exist:
$codep
	%studio_prefix%\vcvarsall.bat
$$
For example
$codep
	SET studio_prefix=C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC
$$

$subhead Setup Environment$$
Execute the following commands:
$codep
	CALL "%studio_prefix%\vcvarsall.bat" x86
	SET PATH=%gnu_prefix%/bin;%PATH%
$$

$head Download OMhelp$$
Use the following link to download the current version of OMhelp:
$href%
	https://github.com/bradbell/omhelp/archive/20150118.zip%
	omhelp-20150119.zip
%$$

$head Create Distribution Directory$$
Use the command
$codep
	"%zip_prefix%\7z" x omhelp-20150119.zip
$$
where $icode zip_prefix$$ is the prefix for the install of
$code 7-zip$$.

$head CMake Command$$
$index cmake, command$$
$index command, cmake$$
Execute the following commands:
$codei|
	cd omhelp-20150119
	mkdir build
	cd build
	"%cmake_prefix%\bin\cmake" ^
		-G "NMake Makefiles" ^
		-D omhelp_prefix=|omhelp_prefix|  ^
		-D omhelp_datadir=|omhelp_datadir|  ^
		-D omhelp_c_flags=|omhelp_c_flags|  ^
		..
|$$
Only the program $code%cmake_prefix%cmake$$,
the type of make files $code -G "NMake Makefiles"$$,
and the distribution directory reference $code ..$$,
are required.
The other entries use default values if they are not specified.

$subhead omhelp_prefix$$
$index omhelp_prefix$$
The default value for $icode omhelp_prefix$$ is $code \usr$$; i.e.,
by default the OMhelp executable is installed in 
$codep
	\usr\bin\omhelp.exe
$$
If you do not have write permission for $code \usr$$,
you must specify a $icode prefix$$.
If $icode%omhelp_prefix%\bin%$$ is not in your path,
you will have to specify the entire path 
$icode%omhelp_prefix%\bin\omhelp%$$ when 
you execute it.

$subhead omhelp_datadir$$
The data files used by OMhelp are installed in
$codei%
	%omhelp_prefix%\%omhelp_datadir%\omhelp_data
%$$
The default value for $icode omhelp_datadir$$ is $code share$$.

$subhead omhelp_c_flags$$
These are extra flags, besides the debug and release flags,
that are used during compilation.
The default value for $icode omhelp_c_flags$$ is none. 

$head Build Executable$$
In the directory $code omhelp-20150119\build$$ execute the following command
$codep
	nmake
$$
This should build the program
$codep
	omhelp-20150119\build\src\omhelp.exe
$$
If you have fortran, 
and CMake can figure out how to link C to Fortran,
the following program will also be built
$codep
	omhelp-20150119\build\omh\getstarted\run_all.exe
$$

$head Build Documentation$$
Starting in the $code omhelp-20150119$$ directory,
execute the following commands
$codep
	mkdir dev
	cd dev
	..\build\src\omhelp ..\src\omh\omhelp.omh > ..\omhelp.dev.log ^
		-noframe -xml -debug -omhelp_dir ..\omhelp_data
	cd ..
	mkdir doc
	cd doc
	..\build\src\omhelp ..\omh\overview.omh -noframe -xml -debug ^
		-omhelp_dir ..\omhelp_data
$$
This should complete without error, and so also functions as a test
of the distribution.

$head Install OMhelp$$
In the directory $code omhelp-20150119\build$$ execute the following command
$codep
	nmake install
$$

$head Getting Started$$
$index getstarted, using OMhelp$$
$index OMhelp, getstarted using$$
You can build the 
$cref multiple_example_1$$ subtree of the OMhelp user documentation 
by executing the following commands starting in the 
$code omhelp-20150119$$ directory:
$codei%
	mkdir xam
	cd xam
	"%omhelp_prefix%\bin\omhelp" ..\omh\getstarted\multiple_example_1.omh
%$$
Note that if $icode%omhelp_prefix%/bin%$$ is in you execution path,
you can use the command
$codei%
	omhelp ../omh/getstarted/multiple_example_1.omh
%$$
See the $cref get_started$$ section for more examples.

$head Dictionary$$ 
$index dictionary$$
$index english.wrd$$
$index local.wrd$$
$index dictionary.bin$$
OMhelp utility files are stored in the 
$code omhelp-20150119\omhelp_data$$ directory.
This directory can contain the files
$codep
	omhelp_data\english.wrd
	omhelp_data\local.wrd
$$
the file $code local.wrd$$ is optional.
If the file $code dictionary.bin$$ is not present,
OMhelp combines $code english.wrd$$ and $code local.wrd$$
to form
$codep
	omhelp_data\dictionary.bin
$$
The words in $code english.wrd$$ and $code local.wrd$$
must be in alphabetic order, lower case, and contain only letters
with one per line.
For example,
$codep
	a
	aardvark
	aardvarks
	...
$$
If you make any changes to $code english.wrd$$ or $code local.wrd$$,
the file $code dictionary.bin$$ should be deleted.
A new $code dictionary.bin$$ that combines the words $code english.wrd$$
and $code local.wrd$$ can be created and installed by executing following 
commands in the $code omhelp-20150119$$ directory:
$codep
	del omhelp_data\dictionary.bin
	cd doc
	..\build\src\omhelp ..\omh\overview -noframe -xml -debug \
		-omhelp_dir ..\omhelp_data
	cd ..\build
	make install
$$ 


$end
