# BEGIN SHORT COPYRIGHT
# ---------------------------------------------------------------------------
# OMhelp: Source Code -> Help Files: Copyright (C) 1998-2004 Bradley M. Bell
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# ---------------------------------------------------------------------------
# END SHORT COPYRIGHT
#
$begin list$$
$spell 
	list
	lend
	lnext
$$
$dollar @$$

$mindex list lnext lend$$
$mindex item$$

$section Commands Used to Display Lists of Items$$

$table
$bold Syntax$$
$cnext $syntax/@list /marker/@@
@lnext
@lend/$$ $rnext
$bold See Also$$
$cnext $mref/table/pre/$$
$tend

$fend 30$$

$head Description$$
These commands are used to enumerate a list of items.
The $code list$$ command begins a new list.
The $code lnext$$ command marks the end of one item and
the beginning of another.
The $code lend$$ command marks the end of the current list.
Any combination of text other commands and text can be placed 
between these commands.

$head Marker$$
The $italic marker$$ argument in the $code list$$ command
specifies the type of marker used to label each entry in the list.
It must be one of the following values
$table
$bold Value$$    $cnext    $bold Description$$              $rnext
$code disk$$     $cnext    a disk                           $rnext
$code circle$$   $cnext    a circle                         $rnext
$code square$$   $cnext    a square                         $rnext
$code number$$   $cnext    arabic numbers                   $rnext
$code alpha$$    $cnext    lower case alphabetic characters $rnext
$code Alpha$$    $cnext    upper case alphabetic characters $rnext
$code roman$$    $cnext    lower case roman numerals        $rnext
$code Roman$$    $cnext    upper case roman numerals
$tend



$head Example$$
The input 
$codep
	@list number@@ One
	@lnext @italic Two@@ 
	@lnext @code Three@@ 
	@lend
$$
results in the list 

$list number$$ One
$lnext $italic Two$$ 
$lnext $code Three$$ 
$lend

You can nest one $code list$$ list within another:
For example,
$codep
	@list Roman@@ One
		@list number@@ first
		@lnext second
		@lnext third
			@list square@@ some
			@lnext list
			@lnext entries
			@lend
		@lend
	@lnext @italic Two@@ 
	@lnext @code Three@@ 
	@lend
$$

results in the list 

$list Roman$$ One
	$list number$$ first
	$lnext second
	$lnext third
		$list square$$ some
		$lnext list
		$lnext entries
		$lend
	$lend
$lnext $italic Two$$ 
$lnext $code Three$$ 
$lend

$head Reference$$
The list begins with a $code list$$ command
and extends until the corresponding $code lend$$ command.
The $code lnext$$ command can only occur inside of a list.

$end
